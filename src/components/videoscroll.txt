tailwind.config.js er style section e
.scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
  .scrollbar-hide {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
  }
  
/*  */
  import { useState, useRef, useEffect, Fragment } from "react"
import { Dialog, Transition } from "@headlessui/react"
import '../components/videoscroll.css'
const videos = [
  {
    title: "African Savannah Sunrise",
    date: "April 1, 2025",
    category: "NATURE",
    video: "/videos/savannah.mp4",
    thumbAlt: "Savannah",
  },
  {
    title: "Traditional Tribal Dance",
    date: "April 2, 2025",
    category: "CULTURE",
    video: "/videos/dance.mp4",
    thumbAlt: "Tribal Dance",
  },
  {
    title: "Rainforest Wonders",
    date: "April 3, 2025",
    category: "NATURE",
    video: "/videos/rainforest.mp4",
    thumbAlt: "Rainforest",
  },
  {
    title: "Desert Winds",
    date: "April 4, 2025",
    category: "ENVIRONMENT",
    video: "/videos/desert.mp4",
    thumbAlt: "Desert",
  },
  {
    title: "Sunset over Serengeti",
    date: "April 5, 2025",
    category: "TRAVEL",
    video: "/videos/sunset.mp4",
    thumbAlt: "Sunset",
  }
]

const Workspace = () => {
  const [modalOpen, setModalOpen] = useState(false)
  const [activeVideo, setActiveVideo] = useState(null)
  const videoRef = useRef(null)

  useEffect(() => {
    if (modalOpen && videoRef.current) {
      videoRef.current.play()
    }
  }, [modalOpen])

  const openModal = (video) => {
    setActiveVideo(video)
    setModalOpen(true)
  }

  return (
    <div
      className="py-10 px-4 bg-[#f5f2e9] font-sans h-screen overflow-y-scroll scrollbar-hide"
    >
      <h2 className="text-3xl text-center font-bold mb-6 text-[#2c221b]">
        Discover African Stories through Video
      </h2>

      {/* Video Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto">
        {videos.map((vid, index) => (
          <div
            key={index}
            className="bg-[#e3d7c4] rounded-xl p-4 shadow-md hover:shadow-xl transition duration-300"
          >
            <div className="mb-3">
              <button
                onClick={() => openModal(vid)}
                className="w-full h-36 bg-[#c2aa7e] flex items-center justify-center rounded-lg text-white text-lg font-semibold hover:bg-[#a8916a]"
              >
                ▶ Play
              </button>
            </div>
            <div className="text-center">
              <p className="text-xs text-[#4b3a2f] font-semibold">{vid.category}</p>
              <p className="text-xs text-[#776e65]">{vid.date}</p>
              <h3 className="text-base font-bold text-[#3e2f24] mt-1">{vid.title}</h3>
            </div>
          </div>
        ))}
      </div>

      {/* Modal */}
      <Transition show={modalOpen} as={Fragment}>
        <Dialog initialFocus={videoRef} onClose={() => setModalOpen(false)} className="relative z-50">
          <Transition.Child
            as={Fragment}
            enter="ease-out duration-200"
            enterFrom="opacity-0"
            enterTo="opacity-100"
            leave="ease-out duration-100"
            leaveFrom="opacity-100"
            leaveTo="opacity-0"
          >
            <div className="fixed inset-0 bg-black bg-opacity-70 backdrop-blur-sm" />
          </Transition.Child>

          <Transition.Child
            as={Fragment}
            enter="ease-out duration-300"
            enterFrom="opacity-0 scale-75"
            enterTo="opacity-100 scale-100"
            leave="ease-out duration-200"
            leaveFrom="opacity-100 scale-100"
            leaveTo="opacity-0 scale-75"
          >
            <div className="fixed inset-0 flex items-center justify-center p-4">
              <Dialog.Panel className="w-full max-w-4xl bg-black rounded-2xl overflow-hidden shadow-2xl">
                <video ref={videoRef} controls loop className="w-full h-auto">
                  <source src={activeVideo?.video} type="video/mp4" />
                  Your browser does not support the video tag.
                </video>
              </Dialog.Panel>
            </div>
          </Transition.Child>
        </Dialog>
      </Transition>
    </div>
  )
}

export default Workspace




2...........





import { useState, useRef, useEffect } from "react"
import { Dialog, Transition } from "@headlessui/react"
import { Fragment } from "react"

const videos = [
  {
    title: "African Savannah Sunrise",
    date: "April 1, 2025",
    category: "NATURE",
    video: "/videos/savannah.mp4",
    thumbAlt: "Savannah",
  },
  {
    title: "Traditional Tribal Dance",
    date: "April 2, 2025",
    category: "CULTURE",
    video: "/videos/dance.mp4",
    thumbAlt: "Tribal Dance",
  },
  {
    title: "Rainforest Wonders",
    date: "April 3, 2025",
    category: "NATURE",
    video: "/videos/rainforest.mp4",
    thumbAlt: "Rainforest",
  },
  {
    title: "Desert Winds",
    date: "April 4, 2025",
    category: "ENVIRONMENT",
    video: "/videos/desert.mp4",
    thumbAlt: "Desert",
  },
  {
    title: "Sunset over Serengeti",
    date: "April 5, 2025",
    category: "TRAVEL",
    video: "/videos/sunset.mp4",
    thumbAlt: "Sunset",
  }
]

const Workspace = () => {
  const [modalOpen, setModalOpen] = useState(false)
  const [activeVideo, setActiveVideo] = useState(null)
  const videoRef = useRef(null)

  useEffect(() => {
    if (modalOpen && videoRef.current) {
      videoRef.current.play()
    }
  }, [modalOpen])

  const openModal = (video) => {
    setActiveVideo(video)
    setModalOpen(true)
  }

  return (
    <div className="h-screen overflow-y-scroll py-16 px-4 bg-[#f5f2e9] font-sans">
      <h2 className="text-4xl text-center font-bold mb-10 text-[#2c221b]">
        Discover African Stories through Video
      </h2>

      {/* Video Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto">
        {videos.map((vid, index) => (
          <div
            key={index}
            className="bg-[#e3d7c4] rounded-xl p-6 shadow-xl hover:shadow-2xl transition duration-300"
          >
            <div className="mb-4">
              <button
                onClick={() => openModal(vid)}
                className="w-full h-48 bg-[#c2aa7e] flex items-center justify-center rounded-lg text-white text-xl font-bold hover:bg-[#a8916a]"
              >
                ▶ Play Video
              </button>
            </div>
            <div className="text-center">
              <p className="text-sm text-[#4b3a2f] font-semibold">{vid.category}</p>
              <p className="text-xs text-[#776e65]">{vid.date}</p>
              <h3 className="text-lg font-bold text-[#3e2f24] mt-1">{vid.title}</h3>
            </div>
          </div>
        ))}
      </div>

      {/* Modal */}
      <Transition show={modalOpen} as={Fragment}>
        <Dialog initialFocus={videoRef} onClose={() => setModalOpen(false)} className="relative z-50">
          <Transition.Child
            as={Fragment}
            enter="ease-out duration-200"
            enterFrom="opacity-0"
            enterTo="opacity-100"
            leave="ease-out duration-100"
            leaveFrom="opacity-100"
            leaveTo="opacity-0"
          >
            <div className="fixed inset-0 bg-black bg-opacity-70 backdrop-blur-sm" />
          </Transition.Child>

          <Transition.Child
            as={Fragment}
            enter="ease-out duration-300"
            enterFrom="opacity-0 scale-75"
            enterTo="opacity-100 scale-100"
            leave="ease-out duration-200"
            leaveFrom="opacity-100 scale-100"
            leaveTo="opacity-0 scale-75"
          >
            <div className="fixed inset-0 flex items-center justify-center p-4">
              <Dialog.Panel className="w-full max-w-5xl bg-black rounded-3xl overflow-hidden shadow-2xl">
                <video ref={videoRef} controls loop className="w-full h-auto">
                  <source src={activeVideo?.video} type="video/mp4" />
                  Your browser does not support the video tag.
                </video>
              </Dialog.Panel>
            </div>
          </Transition.Child>
        </Dialog>
      </Transition>
    </div>
  )
}

export default Workspace

